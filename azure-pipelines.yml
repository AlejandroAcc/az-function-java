# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- master
- dev

pool:
  vmImage: 'vs2017-win2016'

steps:
- task: NuGetToolInstaller@0
  inputs:
   checkLatest: true
- pwsh: |
     Get-Command mvn
  displayName: 'Installing Maven'
- pwsh: |
      $buildNumber = 0      
      if($env:APPVEYOR_REPO_TAG -eq "true") {
       $buildNumber = $(Build.SourceBranchName)
       Write-Host “Found git tag."
      } 
      else {
       $buildNumber = "1.5.0-SNAPSHOT-$(Build.BuildId)"
       Write-Host “git tag not found. Setting package suffix to '$buildNumber'"
      }     
      .\package.ps1 -buildNumber $buildNumber
  displayName: 'Executing build script'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.Repository.LocalPath)/pkg'
    Contents: '*.nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
  displayName: 'Copying files for artifacts'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- pwsh: |
      .\setup-tests.ps1
  displayName: 'Starting Functions Host'
- pwsh: |
      $proc = start-process -filepath $(System.DefaultWorkingDirectory)\Azure.Functions.Cli\func.exe -WorkingDirectory "$(System.DefaultWorkingDirectory)\endtoendtests\target\azure-functions\azure-functions-java-endtoendtests" -ArgumentList "host start --java" -RedirectStandardOutput "output.txt" -RedirectStandardError "error.txt" -PassThru
      # wait for host to start
      Start-Sleep -s 30
      .\run-tests.ps1
      Stop-Process -Id $proc.Id -Erroraction Ignore
      # Output standard input stream and error stream
      Write-Output "Standard input stream :" (gc ".\output.txt")
      Write-Output "Standard error stream :" (gc ".\error.txt")
  displayName: 'Starting Functions Host and running'
